setwd('L:/PNA/')
valuesZ1 <- seq(from = -10, to = 10, by = 0.05)
# Zadanie 1
funToPlotZ1 <- \(x, y) sin(x^2 / 2 - y^2 / 4) * cos(2*x - exp(y))
toPlotZ1 <- outer(valuesZ1, valuesZ1, funToPlotZ1)
plot3D::persp3D(valuesZ1, valuesZ1, toPlotZ1)
valuesZ1 <- seq(from = -5, to = 5, by = 0.05)
toPlotZ1 <- outer(valuesZ1, valuesZ1, funToPlotZ1)
plot3D::persp3D(valuesZ1, valuesZ1, toPlotZ1)
# Zadanie 5
daneZ5 <- c(4.76,0.35,0.04,-1.26,3.30,3.79,0.82,-1.18,-0.77,2.47,1.50,2.62,1.62,3.27,1.89,1.45, 1.61,2.78,-0.98,2.41)
logLikZ5 <- \(mu, sigma) -0.5 * nZ5 * log(2*pi) - nZ5 * sigma - 0.5 * sum((daneZ5 - mu)^2/sigma^2)
logLikZ5 <- function(param){
mu <- param[1]
sigma <- param[2]
-0.5 * nZ5 * log(2*pi) - nZ5 * sigma - 0.5 * sum((daneZ5 - mu)^2/sigma^2)
}
maxLik::maxLik(logLikZ5, start = c(mu=1, sigma=0))
# Zadanie 5
daneZ5 <- c(4.76,0.35,0.04,-1.26,3.30,3.79,0.82,-1.18,-0.77,2.47,1.50,2.62,1.62,3.27,1.89,1.45, 1.61,2.78,-0.98,2.41)
nZ5 <- length(daneZ5)
logLikZ5 <- function(param){
mu <- param[1]
sigma <- param[2]
-0.5 * nZ5 * log(2*pi) - nZ5 * sigma - 0.5 * sum((daneZ5 - mu)^2/sigma^2)
}
maxLik::maxLik(logLikZ5, start = c(mu=1, sigma=0))
maxLik::maxLik(logLikZ5, start = c(mu=0, sigma=1))
estimates <- maxLik::maxLik(logLikZ5, start = c(mu=0, sigma=1))$estimate
logLikZ5 <- function(param){
mu <- param[1]
sigma <- param[2]
-0.5 * nZ5 * log(2*pi) - nZ5 * log(sigma) - 0.5 * sum((daneZ5 - mu)^2/sigma^2)
}
estimates <- maxLik::maxLik(logLikZ5, start = c(mu=0, sigma=1))$estimate
estimates
gradLogLikZ5 <- function(param){
mu <- param[1]
sigma <- param[2]
c(sum((daneZ5 - mu) / sigma^2), -N/sigma + sum((daneZ5 - mu)^2 / sigma^3))
}
hessLogLikZ5 <- function(param){
mu <- param[1]
sigma <- param[2]
hess <- matrix(nrow = 2, ncol = 2)
hess[1,1] <- -nZ5 / sigma^2
hess[1,2] <- -2 * sum((daneZ5 - mu) / sigma^3)
hess[2,1] <- hess[1,2]
hess[2,2] <- N / sigma^3 - 3 * sum((daneZ5 - mu)^2/sigma^4)
hess
}
estimates <- maxLik::maxLik(logLikZ5, gradLogLikZ5, start = c(mu=0, sigma=1))$estimate
gradLogLikZ5 <- function(param){
mu <- param[1]
sigma <- param[2]
c(sum((daneZ5 - mu) / sigma^2), -nZ5/sigma + sum((daneZ5 - mu)^2 / sigma^3))
}
hessLogLikZ5 <- function(param){
mu <- param[1]
sigma <- param[2]
hess <- matrix(nrow = 2, ncol = 2)
hess[1,1] <- -nZ5 / sigma^2
hess[1,2] <- -2 * sum((daneZ5 - mu) / sigma^3)
hess[2,1] <- hess[1,2]
hess[2,2] <- nZ5 / sigma^3 - 3 * sum((daneZ5 - mu)^2/sigma^4)
hess
}
estimates <- maxLik::maxLik(logLikZ5, gradLogLikZ5, start = c(mu=0, sigma=1))$estimate
estimates
estimates <- maxLik::maxLik(logLikZ5, gradLogLikZ5, hessLogLikZ5, start = c(mu=0, sigma=1))$estimate
estimates
